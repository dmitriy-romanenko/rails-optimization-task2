Measure Mode: allocations
Thread ID: 260
Fiber ID: 240
Total: 409.000000
Sort by: self_time

 %self      total      self      wait     child     calls  name                           location
 30.07    123.000   123.000     0.000     0.000       18   String#split                   
 13.94    287.000    57.000     0.000   230.000        4  *Array#each                     
  6.36     97.000    26.000     0.000    71.000        3   Parser#collect_stats_for_previous_user /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/parser.rb:74
  5.87     24.000    24.000     0.000     0.000       24   Array#map                      
  5.38     22.000    22.000     0.000     0.000        1   <Class::IO>#readlines          
  4.65    397.000    19.000     0.000   378.000        1   <Class::IO>#open               
  3.91     31.000    16.000     0.000    15.000       15   Parser#parse_session           /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/parser.rb:61
  3.67     15.000    15.000     0.000     0.000       15   String#upcase                  
  3.42     14.000    14.000     0.000     0.000        1   Kernel#`                       
  3.42     14.000    14.000     0.000     0.000        7   Array#sort                     
  2.93     12.000    12.000     0.000     0.000       12   String#+                       
  2.20      9.000     9.000     0.000     0.000       15   String#=~                      
  2.20     76.000     9.000     0.000    67.000        3   Parser#parse_user              /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/parser.rb:48
  1.71     10.000     7.000     0.000     3.000        1   JsonWriter#write_common_stats  /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/json_writer.rb:21
  1.47      6.000     6.000     0.000     0.000        6   Integer#to_s                   
  1.22    402.000     5.000     0.000   397.000        1   Parser#work                    /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/parser.rb:18
  0.98      9.000     4.000     0.000     5.000        2   Class#new                      
  0.98    409.000     4.000     0.000   405.000        1   [global]#                      memory_profiler.rb:21
  0.98      4.000     4.000     0.000     0.000        4   Array#join                     
  0.73      3.000     3.000     0.000     0.000        3   Array#reverse                  
  0.73      3.000     3.000     0.000     0.000        1   JsonWriter#prepare_user_stats  /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/json_writer.rb:10
  0.49      4.000     2.000     0.000     2.000        1   JsonWriter#initialize          /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/json_writer.rb:6
  0.49      2.000     2.000     0.000     0.000        1   String#%                       
  0.49      2.000     2.000     0.000     0.000        1   <Class::Oj::StreamWriter>#new  
  0.24      1.000     1.000     0.000     0.000        1   IO#write                       
  0.24      2.000     1.000     0.000     1.000        1   IO#puts                        
  0.24      3.000     1.000     0.000     2.000        1   Kernel#puts                    
  0.24      1.000     1.000     0.000     0.000        3   JsonWriter#write_user_stats    /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/json_writer.rb:16
  0.24      8.000     1.000     0.000     7.000        3   Array#any?                     
  0.24      1.000     1.000     0.000     0.000        1   Parser#initialize              /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/parser.rb:12
  0.24      1.000     1.000     0.000     0.000        1   File#initialize                
  0.00      0.000     0.000     0.000     0.000       29   Array#push                     
  0.00      0.000     0.000     0.000     0.000        4   Array#count                    
  0.00      0.000     0.000     0.000     0.000       18   Integer#+                      
  0.00      0.000     0.000     0.000     0.000        3   Integer#>                      
  0.00      0.000     0.000     0.000     0.000       31   String#to_i                    
  0.00      0.000     0.000     0.000     0.000       36   String#==                      
  0.00      0.000     0.000     0.000     0.000      123   Array#[]                       
  0.00      0.000     0.000     0.000     0.000        3   Array#sum                      
  0.00      0.000     0.000     0.000     0.000        3   Array#max                      
  0.00      2.000     0.000     0.000     2.000        3   Array#all?                     
  0.00      0.000     0.000     0.000     0.000        8   Oj::StreamWriter#push_key      
  0.00      0.000     0.000     0.000     0.000        2   Oj::StreamWriter#push_object   
  0.00      0.000     0.000     0.000     0.000        7   Oj::StreamWriter#push_value    
  0.00      0.000     0.000     0.000     0.000        1   IO#fileno                      
  0.00      0.000     0.000     0.000     0.000        2   Oj::StreamWriter#pop           
  0.00      0.000     0.000     0.000     0.000        1   Oj::StreamWriter#flush         
  0.00      0.000     0.000     0.000     0.000        1   <Module::Process>#pid          
  0.00      0.000     0.000     0.000     0.000        1   Integer#/                      
  0.00      0.000     0.000     0.000     0.000        1   <Module::GC>#disable           <internal:gc>:84
  0.00      0.000     0.000     0.000     0.000        1   IO#closed?                     
  0.00      0.000     0.000     0.000     0.000        1   IO#close                       
  0.00      0.000     0.000     0.000     0.000        3   Parser#collect_unique_browsers /Users/dmitry/Desktop/ruby_optimization/rails-optimization-task2/parser.rb:41
  0.00      0.000     0.000     0.000     0.000       15   Array#include?                 

* recursively called methods

Columns are:

  %self     - The percentage of time spent in this method, derived from self_time/total_time.
  total     - The time spent in this method and its children.
  self      - The time spent in this method.
  wait      - The amount of time this method waited for other threads.
  child     - The time spent in this method's children.
  calls     - The number of times this method was called.
  name      - The name of the method.
  location  - The location of the method.

The interpretation of method names is:

  * MyObject#test - An instance method "test" of the class "MyObject"
  * <Object:MyObject>#test - The <> characters indicate a method on a singleton class.
